<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.rank.dao.PaperMapper">

  <sql id="requestAllFields">
        <![CDATA[
            id,
            title,
            createdtime,
            updatedtime,
            content,
            userId,
            read_num as readNum,
            state


        ]]>
    </sql>

  <select id="getPapers" resultType="com.example.rank.model.Paper">
    select a.*,b.name as typeName from(
      SELECT
       t.id id,
       t.title title,
       t.createdtime createdtime,
       t.updatedtime updatedtime,
       t.content content,
       t.userId userId,
       t.read_num as readNum,
       t.state state,
       t.typeid typeid
       from
       tb_paper t
    )a left join
    tb_paper_type b on
    b.id=a.typeid


  </select>
  <update id="updateReadNum" parameterType="com.example.rank.param.PaperParam">
    UPDATE
    tb_paper
    SET
    read_num=#{readNum}
    WHERE id=#{id}
  </update>
  <select id="getPapersByCon" resultType="com.example.rank.model.Paper">
    select a.*,b.name as typeName from(
    SELECT
    t.id id,
    t.title title,
    t.createdtime createdtime,
    t.updatedtime updatedtime,
    t.content content,
    t.userId userId,
    t.read_num as readNum,
    t.state state,
    t.typeid typeid
    from
    tb_paper t
    <where>
      <if test="id != null and id != ''">
        AND id=#{id}
      </if>
      <if test="userId != null and userId != ''">
        AND userId=#{userId}
      </if>
      <if test="title != null and title != ''">
        AND title LIKE concat('%',#{title},'%')
      </if>
      <if test="state != null and state != ''">
        AND state=#{state}
      </if>
      <if test="createTimeOne !=null  and createTimeTwo !=null">
        AND createdtime between #{createTimeOne} and #{createTimeTwo}

      </if>
      <if test="updatedTimeOne !=null  and updatedTimeTwo !=null">
        AND updatedtime between #{updatedTimeOne} and #{updatedTimeTwo}

      </if>
    </where>
    )a left join
    tb_paper_type b on
    b.id=a.typeid

  </select>

<delete id="delete" parameterType="com.example.rank.param.PaperParam">
  delete from tb_paper
  <where>
    id=#{id}
  </where>
</delete>


  <update id="submitCheck" parameterType="com.example.rank.param.PaperParam">
    update tb_paper
    set
    state=#{state}
    <where>
      id=#{id}
    </where>

  </update>

  <update id="updateContent" parameterType="com.example.rank.param.PaperParam">
    update tb_paper
    set
    content=#{content},
    updatedtime=#{updatedtimeOne}
    <where>
      id=#{id}
    </where>
  </update>

  <update id="check" parameterType="com.example.rank.param.PaperParam">
    update tb_paper
    set
    state=#{state}
    <where>
      id=#{id}
    </where>
  </update>


  <insert id="add" useGeneratedKeys="true" parameterType="com.example.rank.param.AddPaperParam" keyProperty="id">
    INSERT INTO tb_paper

    <trim prefix="(" suffix=")" prefixOverrides=",">
      <if test="null!=title and ''!=title">,title</if>
      <if test="null!=createdtime">,createdtime</if>
      <if test="null!=updatedtime">,updatedtime</if>
      <if test="null!=content and ''!=content">,content</if>
      <if test="null!=userid">,userid</if>
      <if test="null!=readNum ">,read_num</if>
      <if test="null!=state" >,state</if>
      <if test="null!=typeid" >,typeid</if>
    </trim>
    VALUES
    <trim prefix="(" suffix=")" prefixOverrides=",">
      <if test="null!=title and ''!=title">,#{title}</if>
      <if test="null!=createdtime">,#{createdtime}</if>
      <if test="null!=updatedtime">,#{updatedtime}</if>
      <if test="null!=content and ''!=content">,#{content}</if>
      <if test="null!=userid">,#{userid}</if>
      <if test="null!=readNum ">,#{readNum}</if>
      <if test="null!=state" >,#{state}</if>
      <if test="null!=typeid" >,#{typeid}</if>
    </trim>

  </insert>
</mapper>