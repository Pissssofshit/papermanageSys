<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.rank.dao.PaperMapper">
  <resultMap id="BaseResultMap" type="com.example.rank.model.Paper">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="createdtime" jdbcType="TIMESTAMP" property="createdtime" />
    <result column="updatedtime" jdbcType="TIMESTAMP" property="updatedtime" />
    <result column="userId" jdbcType="BIGINT" property="userid" />
    <result column="read_num" jdbcType="INTEGER" property="readNum" />
    <result column="state" jdbcType="VARCHAR" property="state" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.example.rank.model.Paper">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Base_Column_List">
    id, title, createdtime, updatedtime, userId, read_num, state
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tb_paper
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from tb_paper
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.example.rank.model.Paper">
    insert into tb_paper (id, title, createdtime, 
      updatedtime, userId, read_num, 
      state, content)
    values (#{id,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR}, #{createdtime,jdbcType=TIMESTAMP}, 
      #{updatedtime,jdbcType=TIMESTAMP}, #{userid,jdbcType=BIGINT}, #{readNum,jdbcType=INTEGER}, 
      #{state,jdbcType=VARCHAR}, #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.rank.model.Paper">
    insert into tb_paper
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="createdtime != null">
        createdtime,
      </if>
      <if test="updatedtime != null">
        updatedtime,
      </if>
      <if test="userid != null">
        userId,
      </if>
      <if test="readNum != null">
        read_num,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="createdtime != null">
        #{createdtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedtime != null">
        #{updatedtime,jdbcType=TIMESTAMP},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=BIGINT},
      </if>
      <if test="readNum != null">
        #{readNum,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.rank.model.Paper">
    update tb_paper
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="createdtime != null">
        createdtime = #{createdtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedtime != null">
        updatedtime = #{updatedtime,jdbcType=TIMESTAMP},
      </if>
      <if test="userid != null">
        userId = #{userid,jdbcType=BIGINT},
      </if>
      <if test="readNum != null">
        read_num = #{readNum,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.example.rank.model.Paper">
    update tb_paper
    set title = #{title,jdbcType=VARCHAR},
      createdtime = #{createdtime,jdbcType=TIMESTAMP},
      updatedtime = #{updatedtime,jdbcType=TIMESTAMP},
      userId = #{userid,jdbcType=BIGINT},
      read_num = #{readNum,jdbcType=INTEGER},
      state = #{state,jdbcType=VARCHAR},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.rank.model.Paper">
    update tb_paper
    set title = #{title,jdbcType=VARCHAR},
      createdtime = #{createdtime,jdbcType=TIMESTAMP},
      updatedtime = #{updatedtime,jdbcType=TIMESTAMP},
      userId = #{userid,jdbcType=BIGINT},
      read_num = #{readNum,jdbcType=INTEGER},
      state = #{state,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>